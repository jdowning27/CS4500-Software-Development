#!/usr/bin/env python3
import sys
import io
import os
import socketserver
import threading
import time

from Other import xjson

def verify_input(args):
    """
    Checks that the given list of arguments is valid

    :args: array     List of command line arguments  
    :returns:      Returns argument if input is valid and false if not
    """
    if len(args) < 1:
        return 4567
    try:
        i = int(args[0])
        if i > 0:
            return i
        else:
            raise Exception("Input needs to be > 0")
    except ValueError:
        raise ValueError("Invalid input type")

class JSONTCPHandler(socketserver.StreamRequestHandler):
    input_stream = ""

    def handle(self):
        global CLIENT_CONNECTION
        CLIENT_CONNECTION = True
        while True:
            self.data = self.rfile.readline()
            self.input_stream += self.data.decode('utf-8')
            if not self.data:
                output = xjson.parser(self.input_stream)
                self.wfile.write(output)
                break


def wait_for_connection():
    global CLIENT_CONNECTION
    global GLOBAL_SERVER
    time.sleep(3)
    if not CLIENT_CONNECTION:
        print("No one connected in 3 seconds")
        os._exit(1)


def main():
    global GLOBAL_SERVER
    global CLIENT_CONNECTION
    HOST = "localhost"
    PORT = verify_input(sys.argv[1:])
    with socketserver.TCPServer((HOST, PORT), JSONTCPHandler) as GLOBAL_SERVER:
        CLIENT_CONNECTION = False
        threading.Thread(target=wait_for_connection).start()
        GLOBAL_SERVER.handle_request()



main()